name: GitHub Actions Deploy On Vps
run-name: ${{ github.actor }} deploy on VPS ðŸš€
on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main

jobs:
  build-n-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          check-latest: true
      - run: go version
      - name: Install Golang Dependencies
        run: go mod download
      - name: Build Golang App
        run: GOOS=linux go build -o build/difus -v
      - name: Display Build Golang App
        run: ls -R build/
      - name: Create Env File
        run: 'echo -e "CLAUDE_TOKEN=${{secrets.CLAUDE_TOKEN}}\nBOT_TOKEN=${{ secrets.BOT_TOKEN }}\nCHANNEL_ID=${{ secrets.CHANNEL_ID }}\nDB_USER=${{ secrets.DB_USER }}\nDB_PASSWORD=${{ secrets.DB_PASSWORD }}\nDB_HOST=${{ secrets.DB_HOST }}\nDB_PORT=${{ secrets.DB_PORT }}\nDB_NAME=${{ secrets.DB_NAME }}\nDB_SSL=${{ secrets.DB_SSL }}\n" > build/.env'
      - name: Display Env file
        run: "cat build/.env"
      - name: Copy The Golang App
        uses: appleboy/scp-action@master
        with:
          host: "${{ secrets.VM_HOST }}"
          username: "${{ secrets.VM_USERNAME }}"
          key: "${{ secrets.VM_SSH_KEY }}"
          port: "${{ secrets.VM_SSH_PORT }}"
          source: build/
          target: /home/debian/difus
      - name: Deploy Build Golang App To Debian VM
        uses: appleboy/ssh-action@master
        with:
          host: "${{ secrets.VM_HOST }}"
          username: "${{ secrets.VM_USERNAME }}"
          key: "${{ secrets.VM_SSH_KEY }}"
          port: "${{ secrets.VM_SSH_PORT }}"
          script: |
            cd /home/debian/difus/build
            sudo systemctl stop difus
            sudo systemctl daemon-reload
            sudo systemctl restart difus
            sudo systemctl enable difus

